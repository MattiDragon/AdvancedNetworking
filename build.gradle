plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.1'
    id 'maven-publish'
}

version = project.mod_version + "+mc." + project.minecraft_version
group = project.maven_group
archivesBaseName = project.archives_base_name

repositories {
    mavenCentral()
    maven {
        url "https://kneelawk.com/maven/"
        content {
            includeGroup "com.kneelawk"
        }
    }
    maven {
        url 'https://jitpack.io'
        content {
            includeGroup "com.github.mattidragon"
        }
    }
    maven {
        url = 'https://maven.cafeteria.dev/releases/'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modImplementation include("com.github.mattidragon:nodeflow:$nodeflow_version")
    modImplementation include("com.kneelawk:graphlib:$graphlib_version")
    include modApi("teamreborn:energy:$energy_version") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation "me.luligabi:NoIndium:1.1.0+1.19"
    include "me.luligabi:NoIndium:1.1.0+1.19"

    // Add generated data to runtime classpath (slightly hacky)
    runtimeOnly files("src/main/generated")
}

loom {
    runs {
        datagen {
            inherit server
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.strict-validation"

            ideConfigGenerated = true

            runDir "build/datagen/"
        }
    }

    // Apply datagen at runtime
    mods {
        extended_drawers {
            sourceSet sourceSets.main
            modFiles.from file("src/main/generated")
        }
    }

    accessWidenerPath = file("src/main/resources/advanced_networking.accesswidener")
}

// Delete datagen on clean
clean.delete("src/main/generated")

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
    // Copy datagen to jar
    dependsOn tasks.runDatagen
    from("src/main/generated") {
        exclude "README.md"
        exclude ".cache"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {

    }
}
